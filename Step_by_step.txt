Perfect ðŸ™Œ Letâ€™s make you a **step-by-step Git + GitHub cheat sheet** for updating your church website. Iâ€™ll write it as if youâ€™re using **Windows PowerShell** (but it works the same on Mac/Linux Terminal).

---

# ðŸ“– Git + GitHub Cheat Sheet for Your Church Website

## ðŸ”¹ First-Time Setup (One-Time Only)

1. **Install Git**
   ðŸ‘‰ [Download here](https://git-scm.com/download/win)

2. **Open PowerShell**

   * Press `Windows Key` â†’ type **PowerShell** â†’ open it.

3. **Go to your site folder**

   ```powershell
   cd Desktop\church-site
   ```

4. **Initialize Git (first time only)**

   ```powershell
   git init
   git add .
   git commit -m "Initial commit"
   ```

5. **Connect to GitHub**
   (replace `YourName` with your GitHub username)

   ```powershell
   git remote add origin https://github.com/YourName/church-site.git
   git branch -M main
   git push -u origin main
   ```

---

## ðŸ”¹ Daily Workflow (Updating Sermons/Events/Blog)

Every time you make changes (like editing `sermons.json` or `events.json`):

1. Open **PowerShell** and go to your site folder:

   ```powershell
   cd Desktop\church-site
   ```

2. Check what changed:

   ```powershell
   git status
   ```

3. Add changes:

   ```powershell
   git add .
   ```

4. Save changes with a message:

   ```powershell
   git commit -m "Updated sermons and events"
   ```

5. Send (push) changes to GitHub:

   ```powershell
   git push
   ```

---

## ðŸ”¹ Common Commands Reference

| Command                   | What it Does                 |
| ------------------------- | ---------------------------- |
| `git status`              | Shows changed files          |
| `git add .`               | Stages all changes           |
| `git commit -m "message"` | Saves a snapshot             |
| `git push`                | Uploads to GitHub            |
| `git pull`                | Downloads latest from GitHub |

---

âœ… After you push, **Netlify will automatically rebuild your live site** with the new sermons, events, and blog posts.

